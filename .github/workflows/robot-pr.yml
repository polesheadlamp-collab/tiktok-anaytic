name: Robot PR + Auto-merge
on: { push: { branches: ['robot/**'] } }
permissions: { contents: write, pull-requests: write }
concurrency:
  group: pr-${{ github.ref }}
  cancel-in-progress: true
jobs:
  pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - name: Ensure PR exists (head robot/** -> main)
        id: ensure
        uses: actions/github-script@v7
        with:
          script: |
            const head = process.env.GITHUB_REF.replace('refs/heads/','');
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
            const prs = await github.paginate(github.rest.pulls.list, { owner, repo, state:'open', head:`${owner}:${head}`, base:'main' });
            let number;
            if (prs.length) number = prs[0].number;
            else {
              const pr = await github.rest.pulls.create({ owner, repo, head, base:'main',
                title:`robot: auto PR from ${head}`, body:'Automated PR from robot branch.' });
              number = pr.data.number;
            }
            core.setOutput('number', number.toString());
      - name: Label PR
        if: steps.ensure.outputs.number
        uses: actions/github-script@v7
        with:
          script: |
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
            await github.rest.issues.addLabels({
              owner, repo, issue_number: Number('${{ steps.ensure.outputs.number }}'), labels: ['robot']
            }).catch(()=>{});
      - name: Enable auto-merge when allowed (squash)
        if: steps.ensure.outputs.number
        continue-on-error: true
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          pull-request-number: ${{ steps.ensure.outputs.number }}
          merge-method: squash
